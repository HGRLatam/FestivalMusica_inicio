function iniciarApp(){navegacionFija(),crearGaleria(),scrollNav()}function navegacionFija(){const e=document.querySelector(".header"),t=document.querySelector(".sobre-festival"),n=document.querySelector("body");window.addEventListener("scroll",(function(){t.getBoundingClientRect().bottom<0?(e.classList.add("fijo"),n.classList.add("body-scroll")):(e.classList.remove("fijo"),n.classList.remove("body-scroll"))}))}function scrollNav(){document.querySelectorAll(".navegacion-principal a").forEach(e=>{e.addEventListener("click",(function(e){e.preventDefault();const t=e.target.attributes.href.value;document.querySelector(t).scrollIntoView({behavior:"smooth"})}))})}function crearGaleria(){const e=document.querySelector(".galeria-imagenes");for(let t=1;t<=12;t++){const n=document.createElement("picture");n.innerHTML=`\n                <source srcset="build/img/thumb/${t}.avif" type="image/avif" />\n                <source srcset="build/img/thumb/${t}.webp" type="image/webp" />\n                <img loading="width" src="build/img/thumb/${t}.jpg" alt="imagen galeria" />\n            `,n.onclick=function(){mostrarImagen(t)},e.appendChild(n)}}function mostrarImagen(e){const t=document.createElement("picture");t.innerHTML=`\n                <source srcset="build/img/grande/${e}.avif" type="image/avif" />\n                <source srcset="build/img/grande/${e}.webp" type="image/webp" />\n                <img loading="width" src="build/img/grande/${e}.jpg" alt="imagen galeria" />\n            `;const n=document.createElement("DIV");n.appendChild(t),n.classList.add("overlay"),n.onclick=function(){document.querySelector("body").classList.remove("fijar-body"),n.remove()};const i=document.createElement("P");i.textContent="X",i.classList.add("btn-cerrar"),i.onclick=function(){document.querySelector("body").classList.remove("fijar-body"),n.remove()},n.appendChild(i);const o=document.querySelector("body");o.appendChild(n),o.classList.add("fijar-body")}document.addEventListener("DOMContentLoaded",(function(){iniciarApp()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJpbmljaWFyQXBwIiwibmF2ZWdhY2lvbkZpamEiLCJjcmVhckdhbGVyaWEiLCJzY3JvbGxOYXYiLCJiYXJyYSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNvYnJlRmVzdGl2YWwiLCJib2R5Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJvdHRvbSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZW5sYWNlIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2VjY2lvblNjcm9sbCIsInRhcmdldCIsImF0dHJpYnV0ZXMiLCJocmVmIiwidmFsdWUiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwiZ2FsZXJpYSIsImkiLCJpbWFnZW4iLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwib25jbGljayIsIm1vc3RyYXJJbWFnZW4iLCJhcHBlbmRDaGlsZCIsImlkIiwib3ZlcmxheSIsImNlcnJhck1vZGFsIiwidGV4dENvbnRlbnQiXSwibWFwcGluZ3MiOiJBQUlBLFNBQVNBLGFBQ0xDLGlCQUNBQyxlQUNBQyxZQUdKLFNBQVNGLGlCQUNMLE1BQU1HLEVBQVFDLFNBQVNDLGNBQWMsV0FDL0JDLEVBQWdCRixTQUFTQyxjQUFjLG1CQUN2Q0UsRUFBT0gsU0FBU0MsY0FBYyxRQUdwQ0csT0FBT0MsaUJBQWlCLFVBQVUsV0FDMUJILEVBQWNJLHdCQUF3QkMsT0FBUyxHQUMvQ1IsRUFBTVMsVUFBVUMsSUFBSSxRQUNwQk4sRUFBS0ssVUFBVUMsSUFBSSxpQkFFbkJWLEVBQU1TLFVBQVVFLE9BQU8sUUFDdkJQLEVBQUtLLFVBQVVFLE9BQU8sbUJBTWxDLFNBQVNaLFlBQ1dFLFNBQVNXLGlCQUFpQiwyQkFFbENDLFFBQVNDLElBQ2JBLEVBQU9SLGlCQUFpQixTQUFTLFNBQVNTLEdBQ3RDQSxFQUFFQyxpQkFFRixNQUFNQyxFQUFnQkYsRUFBRUcsT0FBT0MsV0FBV0MsS0FBS0MsTUFDL0JwQixTQUFTQyxjQUFjZSxHQUMvQkssZUFBZSxDQUFFQyxTQUFVLGdCQUkvQyxTQUFTekIsZUFDTCxNQUFNMEIsRUFBVXZCLFNBQVNDLGNBQWMscUJBRXZDLElBQUssSUFBSXVCLEVBQUksRUFBR0EsR0FBSyxHQUFJQSxJQUFLLENBQzFCLE1BQU1DLEVBQVN6QixTQUFTMEIsY0FBYyxXQUV0Q0QsRUFBT0UsVUFBWSxxREFDdUJILGlGQUNBQSwyRkFDVUEsK0NBR3BEQyxFQUFPRyxRQUFVLFdBQ2JDLGNBQWNMLElBRWxCRCxFQUFRTyxZQUFZTCxJQUk1QixTQUFTSSxjQUFjRSxHQUNuQixNQUFNTixFQUFTekIsU0FBUzBCLGNBQWMsV0FFdENELEVBQU9FLFVBQVksc0RBQzRCSSxrRkFDQUEsNEZBQ1VBLCtDQUd6RCxNQUFNQyxFQUFVaEMsU0FBUzBCLGNBQWMsT0FDdkNNLEVBQVFGLFlBQVlMLEdBQ3BCTyxFQUFReEIsVUFBVUMsSUFBSSxXQUN0QnVCLEVBQVFKLFFBQVUsV0FDRDVCLFNBQVNDLGNBQWMsUUFDL0JPLFVBQVVFLE9BQU8sY0FDdEJzQixFQUFRdEIsVUFLWixNQUFNdUIsRUFBY2pDLFNBQVMwQixjQUFjLEtBQzNDTyxFQUFZQyxZQUFjLElBQzFCRCxFQUFZekIsVUFBVUMsSUFBSSxjQUMxQndCLEVBQVlMLFFBQVUsV0FDTDVCLFNBQVNDLGNBQWMsUUFDL0JPLFVBQVVFLE9BQU8sY0FDdEJzQixFQUFRdEIsVUFFWnNCLEVBQVFGLFlBQVlHLEdBR3BCLE1BQU05QixFQUFPSCxTQUFTQyxjQUFjLFFBQ3BDRSxFQUFLMkIsWUFBWUUsR0FDakI3QixFQUFLSyxVQUFVQyxJQUFJLGNBN0Z2QlQsU0FBU0ssaUJBQWlCLG9CQUFvQixXQUMxQ1YiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uICgpIHtcclxuICAgIGluaWNpYXJBcHAoKTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiBpbmljaWFyQXBwKCkge1xyXG4gICAgbmF2ZWdhY2lvbkZpamEoKTtcclxuICAgIGNyZWFyR2FsZXJpYSgpO1xyXG4gICAgc2Nyb2xsTmF2KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5hdmVnYWNpb25GaWphKCkge1xyXG4gICAgY29uc3QgYmFycmEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJyk7XHJcbiAgICBjb25zdCBzb2JyZUZlc3RpdmFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNvYnJlLWZlc3RpdmFsJyk7XHJcbiAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xyXG5cclxuXHJcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgaWYoIHNvYnJlRmVzdGl2YWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuYm90dG9tIDwgMCAgKSB7XHJcbiAgICAgICAgICAgIGJhcnJhLmNsYXNzTGlzdC5hZGQoJ2Zpam8nKTtcclxuICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QuYWRkKCdib2R5LXNjcm9sbCcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGJhcnJhLmNsYXNzTGlzdC5yZW1vdmUoJ2Zpam8nKTtcclxuICAgICAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdib2R5LXNjcm9sbCcpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gc2Nyb2xsTmF2KCkge1xyXG4gICAgY29uc3QgZW5sYWNlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXZlZ2FjaW9uLXByaW5jaXBhbCBhJyk7XHJcblxyXG4gICAgZW5sYWNlcy5mb3JFYWNoKCBlbmxhY2UgPT4ge1xyXG4gICAgICAgIGVubGFjZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAgICAgY29uc3Qgc2VjY2lvblNjcm9sbCA9IGUudGFyZ2V0LmF0dHJpYnV0ZXMuaHJlZi52YWx1ZTtcclxuICAgICAgICAgICAgY29uc3Qgc2VjY2lvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VjY2lvblNjcm9sbCk7XHJcbiAgICAgICAgICAgIHNlY2Npb24uc2Nyb2xsSW50b1ZpZXcoeyBiZWhhdmlvcjogXCJzbW9vdGhcIn0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gY3JlYXJHYWxlcmlhKCkge1xyXG4gICAgY29uc3QgZ2FsZXJpYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxlcmlhLWltYWdlbmVzJyk7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gMTI7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IGltYWdlbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3BpY3R1cmUnKTtcclxuXHJcbiAgICAgICAgaW1hZ2VuLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgICAgICAgIDxzb3VyY2Ugc3Jjc2V0PVwiYnVpbGQvaW1nL3RodW1iLyR7aX0uYXZpZlwiIHR5cGU9XCJpbWFnZS9hdmlmXCIgLz5cclxuICAgICAgICAgICAgICAgIDxzb3VyY2Ugc3Jjc2V0PVwiYnVpbGQvaW1nL3RodW1iLyR7aX0ud2VicFwiIHR5cGU9XCJpbWFnZS93ZWJwXCIgLz5cclxuICAgICAgICAgICAgICAgIDxpbWcgbG9hZGluZz1cIndpZHRoXCIgc3JjPVwiYnVpbGQvaW1nL3RodW1iLyR7aX0uanBnXCIgYWx0PVwiaW1hZ2VuIGdhbGVyaWFcIiAvPlxyXG4gICAgICAgICAgICBgO1xyXG5cclxuICAgICAgICBpbWFnZW4ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbW9zdHJhckltYWdlbihpKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGdhbGVyaWEuYXBwZW5kQ2hpbGQoaW1hZ2VuKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gbW9zdHJhckltYWdlbihpZCkge1xyXG4gICAgY29uc3QgaW1hZ2VuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGljdHVyZScpO1xyXG5cclxuICAgIGltYWdlbi5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgICAgICA8c291cmNlIHNyY3NldD1cImJ1aWxkL2ltZy9ncmFuZGUvJHtpZH0uYXZpZlwiIHR5cGU9XCJpbWFnZS9hdmlmXCIgLz5cclxuICAgICAgICAgICAgICAgIDxzb3VyY2Ugc3Jjc2V0PVwiYnVpbGQvaW1nL2dyYW5kZS8ke2lkfS53ZWJwXCIgdHlwZT1cImltYWdlL3dlYnBcIiAvPlxyXG4gICAgICAgICAgICAgICAgPGltZyBsb2FkaW5nPVwid2lkdGhcIiBzcmM9XCJidWlsZC9pbWcvZ3JhbmRlLyR7aWR9LmpwZ1wiIGFsdD1cImltYWdlbiBnYWxlcmlhXCIgLz5cclxuICAgICAgICAgICAgYDtcclxuICAgIC8vIGNyZWEgZWwgb3ZlcmxheSBhIGxhIGltYWdlblxyXG4gICAgY29uc3Qgb3ZlcmxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0RJVicpO1xyXG4gICAgb3ZlcmxheS5hcHBlbmRDaGlsZChpbWFnZW4pO1xyXG4gICAgb3ZlcmxheS5jbGFzc0xpc3QuYWRkKCdvdmVybGF5Jyk7XHJcbiAgICBvdmVybGF5Lm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2ZpamFyLWJvZHknKTtcclxuICAgICAgICBvdmVybGF5LnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEJvdG9uIHBhcmEgY2VycmFyIGVsIG1vZGFsXHJcblxyXG4gICAgY29uc3QgY2VycmFyTW9kYWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdQJyk7XHJcbiAgICBjZXJyYXJNb2RhbC50ZXh0Q29udGVudCA9ICdYJ1xyXG4gICAgY2VycmFyTW9kYWwuY2xhc3NMaXN0LmFkZCgnYnRuLWNlcnJhcicpO1xyXG4gICAgY2VycmFyTW9kYWwub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xyXG4gICAgICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnZmlqYXItYm9keScpO1xyXG4gICAgICAgIG92ZXJsYXkucmVtb3ZlKCk7XHJcbiAgICB9XHJcbiAgICBvdmVybGF5LmFwcGVuZENoaWxkKGNlcnJhck1vZGFsKTtcclxuXHJcbiAgICAvLyB2YSBhIGHDsWFkaXIgbGEgaHRtbFxyXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgIGJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheSk7XHJcbiAgICBib2R5LmNsYXNzTGlzdC5hZGQoJ2ZpamFyLWJvZHknKTtcclxuXHJcbn1cclxuIl19
